{"meta":{"title":"程序员Easy","subtitle":null,"description":"开心就好","author":"easy","url":"http://easysite.com"},"pages":[],"posts":[{"title":"ajax参数思考","slug":"Spring容器","date":"2018-10-09T02:03:00.000Z","updated":"2018-10-17T07:31:22.212Z","comments":true,"path":"2018/10/09/Spring容器/","link":"","permalink":"http://easysite.com/2018/10/09/Spring容器/","excerpt":"场景：前端ajax请求后台，没有声明contentType的值，data是一个json对象。后台用@RequestBody注解的bean去接收，前端会报出415的错误。解决方案：把@RequestBody注解去掉，就可以正常接收参数了，页面传的参数是用&amp;拼接的，然后spring对应的conventer转换成对应的bean属性的值:如果用这个注解的话，也可以的，看了一些网上和spring的部分源码…","text":"场景：前端ajax请求后台，没有声明contentType的值，data是一个json对象。后台用@RequestBody注解的bean去接收，前端会报出415的错误。解决方案：把@RequestBody注解去掉，就可以正常接收参数了，页面传的参数是用&amp;拼接的，然后spring对应的conventer转换成对应的bean属性的值:如果用这个注解的话，也可以的，看了一些网上和spring的部分源码…@RequestBody这个注解的使用需要加载MappingJackson2HttpMessageConverter这个类，然后看了下这个类的源码，有两段注释可以解释这个类的大概功能，如下: This converter can be used to bind to typed beans, or untyped {@code HashMap} instances.By default, this converter supports {@code application/json} and {@code application/*+json}with {@code UTF-8} character set. 从上面可以看出，它支持 application/json这个类型，而正好415这个错误的描述是：Unsupported Media Type，可以想出，问题出现在请求参数的内容类型上面，再结合jquery的文档的contentType描述： 默认的是application/x-www-form-urlencoded。所以问题的原因是内容类型不正确，手动指定contentType的值为“application/json”,另外需要注意一点，data的值需要是json串，可以用JSON的stringfy方法转换一下，就可以正常接收数据了。 总结：出问题的时候，可以看一下jquery的各个参数的含义，利用谷歌浏览器的network来查看一些请求的信息。","categories":[],"tags":[]},{"title":"Aop概述","slug":"Aop概述","date":"2018-10-09T01:59:40.000Z","updated":"2018-10-18T13:37:58.831Z","comments":true,"path":"2018/10/09/Aop概述/","link":"","permalink":"http://easysite.com/2018/10/09/Aop概述/","excerpt":"","text":"编程语言的最终极目标就是能以更自然的、更灵活的方式模拟世界，从原始机器语言到过程语言再到面向对象的语言。hahahhahahhaha","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2018-10-09T01:58:14.133Z","updated":"2018-10-09T01:58:14.138Z","comments":true,"path":"2018/10/09/hello-world/","link":"","permalink":"http://easysite.com/2018/10/09/hello-world/","excerpt":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"分布式","slug":"My-New-Post","date":"2018-10-09T01:57:35.960Z","updated":"2018-10-09T01:57:35.961Z","comments":true,"path":"2018/10/09/My-New-Post/","link":"","permalink":"http://easysite.com/2018/10/09/My-New-Post/","excerpt":"","text":"分布式服务跟踪通过之前各章节介绍的Spring Cloud组件，实际上我们已经能够通过使用他们搭建起一个基础的微服务架构系统来实现业务需求了。但是，随着业务的发展，系统规模也会变得越来越大，各微服务间的调用关系也变得越来越错综复杂。","categories":[],"tags":[]},{"title":"事务小记","slug":"事务小记","date":"2018-10-09T00:41:01.000Z","updated":"2018-10-09T01:56:16.281Z","comments":true,"path":"2018/10/09/事务小记/","link":"","permalink":"http://easysite.com/2018/10/09/事务小记/","excerpt":"数据库事务基础知识Spring虽然提供了灵活方便的事务管理功能，但这些功能都是基于底层数据库本身的事务处理机制工作的。要深入了解Spring的事务管理和配置，有必要先对数据库事务的基础知识进行学习。","text":"数据库事务基础知识Spring虽然提供了灵活方便的事务管理功能，但这些功能都是基于底层数据库本身的事务处理机制工作的。要深入了解Spring的事务管理和配置，有必要先对数据库事务的基础知识进行学习。 何为数据库事务“一荣俱荣，一损俱损”，这句话很能体现事务的思想，很多复杂的事务要分布进行，但他们组成一个整体，要么整体生效，要么整体失效。这种思想反映到数据上，就是多个SQL语句，要么所有执行成功，要么所有执行失败。*数据库事务有严格的定义，它必须同时满足4个特性：原子性（Atomic）、一致性（Consistency）、隔离性（Isolation）和持久性（Durabiliy），简称为ACID。下面是对每个特性的说明。 原子性：表示组成一个事务的多个数据库操作是一个不可分割的原子单元，只有所有的操作执行成功，整个事务才提交。 一致性：事务操作成功后，数据库所处的状态和他的业务规则是一致的。 隔离性：在并发数据操作时，不同的事务拥有各自的数据空间，他们的操作不会对对方产生干扰。 持久性：一旦事务提交成功后，事务中所有的数据操作都必须被持久化到数据库中。","categories":[],"tags":[]}]}